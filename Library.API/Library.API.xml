<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library.API</name>
    </assembly>
    <members>
        <member name="T:Library.API.Controllers.AccountsController">
            <summary>
            /
            </summary>
        </member>
        <member name="M:Library.API.Controllers.AccountsController.#ctor(Microsoft.AspNetCore.Identity.UserManager{Library.Domain.Models.LibraryUser},Microsoft.AspNetCore.Identity.SignInManager{Library.Domain.Models.LibraryUser},Microsoft.Extensions.Logging.ILogger{Library.API.Controllers.AccountsController},Library.ServiceLayer.UnitOfWork.IUnitOfWork)">
            <summary>
            
            </summary>
            <param name="userManager"></param>
            <param name="signInManager"></param>
            <param name="logger"></param>
            <param name="uow"></param>
        </member>
        <member name="M:Library.API.Controllers.AccountsController.Login(Library.API.ViewModels.LoginViewModel)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.AccountsController.Register(Library.API.ViewModels.RegisterViewModel)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.AccountsController.GetUserRezervationHistory">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.AccountsController.Logout">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Library.API.Controllers.BookController">
            <summary>
            /
            </summary>
        </member>
        <member name="M:Library.API.Controllers.BookController.#ctor(Microsoft.Extensions.Logging.ILogger{Library.API.Controllers.BookController},Library.ServiceLayer.UnitOfWork.IUnitOfWork)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="uow"></param>
        </member>
        <member name="M:Library.API.Controllers.BookController.GetAvailableBooks">
             <summary>
             Rezerve edilebilir kitaplar listesi
             </summary>
             <returns></returns>
            
        </member>
        <member name="M:Library.API.Controllers.BookController.GetAvailableBook(System.Nullable{System.Int32})">
            <summary>
            Rezerve edilebilir kitap detayÄ±
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.BookController.RezerveBook(System.Nullable{System.Int32})">
            <summary>
            Kitap rezerve et.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.BookController.ReturnedRezerveBook(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Kitap iade et.
            </summary>
            <param name="id"></param>
            <param name="rezervationId"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.BookController.CreateBook(Library.Domain.Models.Book)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Library.API.Filters.AdminSafeListMiddleware">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.Filters.AdminSafeListMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{Library.API.Filters.AdminSafeListMiddleware},System.String)">
            <summary>
            
            </summary>
            <param name="next"></param>
            <param name="logger"></param>
            <param name="safelist"></param>
        </member>
        <member name="M:Library.API.Filters.AdminSafeListMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Library.API.Filters.ConfigureSwaggerOptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.Filters.ConfigureSwaggerOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Library.API.Filters.ConfigureSwaggerOptions"/> class.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider">provider</see> used to generate Swagger documents.</param>
        </member>
        <member name="M:Library.API.Filters.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <inheritdoc />
        </member>
        <member name="T:Library.API.Filters.IpAccessActionFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.Filters.IpAccessActionFilter.#ctor(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            
            </summary>
            <param name="safelist"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Library.API.Filters.IpAccessActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Library.API.Filters.SwaggerDefaultValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.Filters.SwaggerDefaultValues.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Applies the filter to the specified operation using the given context.
            </summary>
            <param name="operation">The operation to apply the filter to.</param>
            <param name="context">The current operation filter context.</param>
        </member>
        <member name="T:Library.API.Filters.SwaggerAuthorizedMiddleware">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.Filters.SwaggerAuthorizedMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,System.String,Microsoft.Extensions.Logging.ILogger{Library.API.Filters.SwaggerAuthorizedMiddleware})">
            <summary>
            
            </summary>
            <param name="next"></param>
            <param name="safelist"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Library.API.Filters.SwaggerAuthorizedMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Library.API.Filters.SwaggerAuthorizeExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.Filters.SwaggerAuthorizeExtensions.UseSwaggerAuthorized(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:Library.API.Helpers.CustomAuthorizeFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Library.API.Helpers.CustomAuthorizeFilter.Policy">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.Helpers.CustomAuthorizeFilter.#ctor(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)">
            <summary>
            
            </summary>
            <param name="policy"></param>
        </member>
        <member name="M:Library.API.Helpers.CustomAuthorizeFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Library.API.Helpers.CustomUnauthorizedResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.Helpers.CustomUnauthorizedResult.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Library.API.Helpers.RoleExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.Helpers.RoleExtension.AddRolesToClaims(System.Collections.Generic.List{System.Security.Claims.Claim},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="claims"></param>
            <param name="roles"></param>
        </member>
        <member name="T:Library.API.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:Library.API.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Library.API.Program.CreateHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
    </members>
</doc>
